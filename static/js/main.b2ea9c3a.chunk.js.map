{"version":3,"sources":["components/organisms/Table/styles.tsx","components/atoms/SearchInput/styles.tsx","components/atoms/SearchInput/index.tsx","components/atoms/AddExpenseButton/index.tsx","components/molecules/Toolbar/style.tsx","exampleData.tsx","slices/ExpensesSlice.ts","components/molecules/Toolbar/index.tsx","components/atoms/ActionButton/index.tsx","components/organisms/Table/helpers.ts","components/organisms/Table/index.tsx","components/organisms/Form/index.tsx","components/pages/MainPage/index.tsx","App.tsx","theme/theme.tsx","store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","table","border","marginTop","spacing","fontWeight","color","palette","primary","main","backgroundColor","light","cursor","fontSize","newButton","textTransform","newInput","width","padding","margin","SearchInput","value","onChange","classes","TextField","className","variant","label","InputProps","startAdornment","InputAdornment","position","Search","AddExpenseButton","onClick","Button","startIcon","Add","exampleData","id","expense","cost","category","date","Date","exampleHeaderData","name","sortable","initialState","expenses","isAddExpenseModalOpen","isEditExpenseModalOpen","ExpensesSlice","createSlice","reducers","addExpense","editExpense","removeExpense","state","action","filter","payload","openAddExpenseModal","closeAddExpenseModal","openEditExpenseModal","closeEditExpenseModal","selectExpensesState","selectExpenses","actions","Toolbar","dispatch","useDispatch","Grid","container","justify","alignItems","ActionButton","children","IconButton","size","descendingComparator","a","b","orderBy","Table","bodyData","headData","rowsPerPageOptions","useState","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","setOrderBy","sortedAndPagingData","array","comparator","stabilizedThis","map","el","index","sort","stableSort","getComparator","slice","Paper","TableContainer","TableHead","TableRow","dataHeadCell","TableCell","TableSortLabel","active","direction","property","disabled","TableBody","costDataRow","toLocaleDateString","console","log","EditOutlined","Delete","TablePagination","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","categories","root","display","flexDirection","pageContent","maxWidth","Form","Typography","component","fullWidth","type","FormControl","InputLabel","Select","MenuItem","item","utils","DateFnsUtils","disableToolbar","inputVariant","format","MainPage","useSelector","App","createMuiTheme","overrides","MuiCssBaseline","html","boxSizing","body","store","configureStore","reducer","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b2ea9c3a.chunk.js","sourcesContent":["import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  table: {\r\n    border: \"2px solig green\",\r\n    marginTop: theme.spacing(3),\r\n    \"& thead th\": {\r\n      fontWeight: \"600\",\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#fffbf2\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n\r\n  \"@media (max-width: 960px)\": {\r\n    table: {\r\n      \"& thead th\": {\r\n        fontSize: \"10px\",\r\n      },\r\n      \"& tbody td\": {\r\n        fontSize: \"10px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  newButton: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n\r\n  newInput: {\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface SearchInputProps {\r\n  value?: string;\r\n  onChange?: () => void;\r\n}\r\n\r\nconst SearchInput: React.FC<SearchInputProps> = ({ value, onChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      className={classes.margin}\r\n      value={value}\r\n      onChange={onChange}\r\n      variant=\"outlined\"\r\n      label=\"Find your expense\"\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <Search />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\ninterface AddExpenseButtonProps {\r\n  onClick: () => void;\r\n}\r\n\r\nconst AddExpenseButton: React.FC<AddExpenseButtonProps> = ({ onClick }) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      startIcon={<Add />}\r\n      color=\"primary\"\r\n      variant=\"contained\"\r\n    >\r\n      Add Item\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddExpenseButton;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}));\r\n","import { SingleExpense, TableHeaderData } from \"./interfaces\";\r\n\r\nexport const exampleData: Array<SingleExpense> = [\r\n  {\r\n    id: 0,\r\n    expense: \"New TV\",\r\n    cost: 2000,\r\n    category: \"Electronics\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    expense: \"Fruits and Vegetable\",\r\n    cost: 10,\r\n    category: \"Grocery\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    expense: \"Electicity\",\r\n    cost: 250,\r\n    category: \"Bills\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    expense: \"Vinyls\",\r\n    cost: 300,\r\n    category: \"Hobby\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    expense: \"Shampoo\",\r\n    cost: 20,\r\n    category: \"Hygiene\",\r\n    date: new Date(),\r\n  },\r\n];\r\n\r\nexport const exampleHeaderData: Array<TableHeaderData> = [\r\n  {\r\n    name: \"expense\",\r\n    label: \"Expense\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"cost\",\r\n    label: \"Cost $\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"category\",\r\n    label: \"Category\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"date\",\r\n    label: \"Date\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"actions\",\r\n    label: \"Edit / Remove\",\r\n    sortable: false,\r\n  },\r\n];\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { exampleData } from \"../exampleData\";\r\nimport { RootState } from \"../store\";\r\nimport { SingleExpense } from \"../interfaces\";\r\n\r\ntype ExpensesSliceState = {\r\n  expenses: Array<SingleExpense>;\r\n  isAddExpenseModalOpen: boolean;\r\n  isEditExpenseModalOpen: boolean;\r\n};\r\n\r\nconst initialState: ExpensesSliceState = {\r\n  expenses: exampleData,\r\n  isAddExpenseModalOpen: false,\r\n  isEditExpenseModalOpen: false,\r\n};\r\n\r\nconst ExpensesSlice = createSlice({\r\n  name: \"expenses\",\r\n  initialState,\r\n  reducers: {\r\n    addExpense: () => {},\r\n\r\n    editExpense: () => {},\r\n\r\n    removeExpense: (state, action: PayloadAction<number>) => {\r\n      state.expenses = state.expenses.filter((expense) => expense.id !== action.payload);\r\n    },\r\n\r\n    openAddExpenseModal: (state) => {\r\n      state.isAddExpenseModalOpen = true;\r\n    },\r\n\r\n    closeAddExpenseModal: (state) => {\r\n      state.isAddExpenseModalOpen = false;\r\n    },\r\n\r\n    openEditExpenseModal: (state) => {\r\n      state.isEditExpenseModalOpen = true;\r\n    },\r\n\r\n    closeEditExpenseModal: (state) => {\r\n      state.isEditExpenseModalOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectExpensesState = (state: RootState) => state.expenses;\r\nexport const selectExpenses = (state: RootState) => selectExpensesState(state).expenses;\r\nexport const selectisAddExpenseModalOpen = (state: RootState) => selectExpensesState(state).isAddExpenseModalOpen;\r\nexport const selectisEditExpenseModalOpen = (state: RootState) => selectExpensesState(state).isEditExpenseModalOpen;\r\n\r\nexport const {\r\n  addExpense,\r\n  editExpense,\r\n  removeExpense,\r\n  openAddExpenseModal,\r\n  closeAddExpenseModal,\r\n  openEditExpenseModal,\r\n  closeEditExpenseModal,\r\n} = ExpensesSlice.actions;\r\n\r\nexport default ExpensesSlice.reducer;\r\n","import React from \"react\";\r\nimport { Grid, Toolbar as MuiToolbar } from \"@material-ui/core\";\r\nimport SearchInput from \"../../atoms/SearchInput\";\r\nimport AddExpenseButton from \"../../atoms/AddExpenseButton\";\r\nimport { useStyles } from \"./style\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openAddExpenseModal } from \"../../../slices/ExpensesSlice\";\r\n\r\nconst Toolbar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const openAddExpenseModalHandler = () => {\r\n    dispatch(openAddExpenseModal());\r\n  };\r\n\r\n  return (\r\n    <MuiToolbar className={classes.margin}>\r\n      <Grid container justify=\"space-between\" alignItems=\"center\">\r\n        <SearchInput />\r\n        <AddExpenseButton onClick={openAddExpenseModalHandler} />\r\n      </Grid>\r\n    </MuiToolbar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\ninterface ActionButtonProps {\r\n  children: React.ReactElement;\r\n  color: \"primary\" | \"secondary\";\r\n  onClick: () => void;\r\n}\r\n\r\nconst ActionButton: React.FC<ActionButtonProps> = ({ children, color, onClick }) => {\r\n  return (\r\n    <IconButton onClick={onClick} size=\"small\" color={color}>\r\n      {children}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","type Order = 'asc' | 'desc';\r\n\r\nconst descendingComparator = <T>(a: T, b: T, orderBy: keyof T) => {\r\nif (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n};\r\n  \r\nexport const getComparator = <Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number => {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n};\r\n  \r\nexport const stableSort = <T>(array: T[], comparator: (a: T, b: T) => number) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table as MuiTable,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  TablePagination,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport { EditOutlined, Delete } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\nimport { SingleExpense, TableHeaderData } from \"../../../interfaces\";\r\nimport Toolbar from \"../../molecules/Toolbar\";\r\nimport ActionButton from \"../../atoms/ActionButton\";\r\nimport { getComparator, stableSort } from \"./helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeExpense } from \"../../../slices/ExpensesSlice\";\r\n\r\ninterface TableProps {\r\n  bodyData: Array<SingleExpense>;\r\n  headData: Array<TableHeaderData>;\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ bodyData, headData }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleRemoveExpense = (id: number) => {\r\n    dispatch(removeExpense(id));\r\n  };\r\n\r\n  //Pagination variables of state\r\n\r\n  const rowsPerPageOptions = [5, 10, 25];\r\n  const [page, setPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(\r\n    rowsPerPageOptions[page]\r\n  );\r\n\r\n  //Pagination handle functions\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\r\n    newPage: number\r\n  ): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ): void => {\r\n    setRowsPerPage(parseInt(event.target.value));\r\n    setPage(0);\r\n  };\r\n\r\n  //Sorting variables of state\r\n  const [order, setOrder] = useState<\"asc\" | \"desc\">(\"asc\");\r\n  const [orderBy, setOrderBy] = useState<string>(\"\");\r\n\r\n  const handleRequestSort = (property: string) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const sortedAndPagingData = stableSort<any>(\r\n    bodyData,\r\n    getComparator(order, orderBy)\r\n  ).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar />\r\n      <TableContainer>\r\n        <MuiTable className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {headData.map((dataHeadCell) => (\r\n                <TableCell key={dataHeadCell.name}>\r\n                  <TableSortLabel\r\n                    active={orderBy === dataHeadCell.name}\r\n                    direction={orderBy === dataHeadCell.name ? order : \"asc\"}\r\n                    onClick={() => handleRequestSort(dataHeadCell.name)}\r\n                    disabled={!dataHeadCell.sortable}\r\n                  >\r\n                    {dataHeadCell.label}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedAndPagingData.map((costDataRow) => (\r\n              <TableRow key={costDataRow.id}>\r\n                <TableCell>{costDataRow.expense}</TableCell>\r\n                <TableCell>{costDataRow.cost}</TableCell>\r\n                <TableCell>{costDataRow.category}</TableCell>\r\n                <TableCell>{costDataRow.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton onClick={()=> console.log(\"Here will be expense adit functionality\")} color=\"primary\">\r\n                    <EditOutlined />\r\n                  </ActionButton>\r\n                  <ActionButton onClick={()=>handleRemoveExpense(costDataRow.id)} color=\"secondary\">\r\n                    <Delete />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </MuiTable>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        count={bodyData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst categories = [\r\n  \"category1\",\r\n  \"category2\",\r\n  \"category3\",\r\n  \"category4\",\r\n  \"category5\",\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"100%\",\r\n      margin: \"16px 0\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n\r\n  pageContent: {\r\n    margin: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n    maxWidth: \"600px\",\r\n  },\r\n}));\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.pageContent}>\r\n      <Typography variant=\"h4\" component=\"h2\">\r\n        Add new / edit cost\r\n      </Typography>\r\n      <form className={classes.root}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Expense\"\r\n          name=\"fullName\"\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"Cost\"\r\n          name=\"fullName\"\r\n          type=\"number\"\r\n          fullWidth\r\n        />\r\n\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel>Department</InputLabel>\r\n          <Select label=\"Department\">\r\n            <MenuItem value=\"\">None</MenuItem>\r\n            {categories.map((item) => (\r\n              <MenuItem key={item} value={item}>\r\n                {item}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            fullWidth\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            format=\"MMM/dd/yyyy\"\r\n            name=\"hireDate\"\r\n            label=\"Hire Date\"\r\n            onChange={() => {}}\r\n            value={new Date()}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Table from \"../../organisms/Table\";\r\nimport Form from \"../../organisms/Form\";\r\nimport { exampleHeaderData } from \"../../../exampleData\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectExpenses } from \"../../../slices/ExpensesSlice\";\r\n\r\nconst MainPage: React.FC = () => {\r\n  const expenses = useSelector(selectExpenses);\r\n  console.log(expenses);\r\n  return (\r\n    <>\r\n      <Table bodyData={expenses} headData={exampleHeaderData} />\r\n      <Form />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\nimport MainPage from \"./components/pages/MainPage\";\n\nconst App: React.FC = () => {\n  return <MainPage />;\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        html: {\r\n          boxSizing: \"border-box\",\r\n        },\r\n\r\n        body: {\r\n          margin: \"30px auto\",\r\n          maxWidth: \"1000px\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport ExpensesSlice from \"./slices/ExpensesSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    expenses: ExpensesSlice,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport { theme } from \"./theme/theme\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}