{"version":3,"sources":["interfaces/index.ts","components/atoms/SearchInput/styles.tsx","components/atoms/SearchInput/index.tsx","components/atoms/DialogButton/index.tsx","components/molecules/Toolbar/styles.tsx","data/exampleBodyData.ts","slices/ExpensesSlice.ts","components/molecules/Toolbar/index.tsx","components/atoms/ActionButton/index.tsx","components/organisms/Table/helpers.ts","components/organisms/Table/styles.tsx","components/organisms/Table/index.tsx","data/categories.ts","components/organisms/Form/styles.tsx","components/organisms/Form/index.tsx","components/templates/Dialog/styles.tsx","components/templates/Dialog/index.tsx","data/headersData.ts","components/pages/MainPage/index.tsx","App.tsx","theme/theme.tsx","store.ts","index.tsx"],"names":["CategoriesTypes","DataIdTypes","SortingOrder","useStyles","makeStyles","theme","margin","spacing","SearchInput","value","onChange","size","classes","TextField","className","variant","label","InputProps","startAdornment","InputAdornment","position","Search","DialogButton","onClick","startIcon","color","children","fullWidth","type","style","Button","marginTop","exampleBodyData","id","expense","cost","category","date","Date","initialExpense","Math","random","initialState","expenses","isAddExpenseModalOpen","isEditExpenseModalOpen","newOrEditedExpense","ExpensesSlice","createSlice","name","reducers","addExpense","state","action","push","payload","editExpense","indexOfEditedExpense","findIndex","removeExpense","filter","openAddExpenseModal","closeAddExpenseModal","openEditExpenseModal","closeEditExpenseModal","selectExpensesState","selectExpenses","selectIsAddExpenseModalOpen","selectIsEditExpenseModalOpen","selectNewOrEditedExpense","actions","Toolbar","dispatch","useDispatch","useTheme","matches","useMediaQuery","breakpoints","up","Grid","container","direction","justify","alignItems","Add","undefined","width","ActionButton","IconButton","descendingComparator","a","b","orderBy","root","paddingTop","table","border","fontWeight","palette","primary","main","backgroundColor","light","cursor","fontSize","padding","Table","bodyData","headData","rowsPerPageOptions","useState","page","setPage","rowsPerPage","setRowsPerPage","Ascending","order","setOrder","setOrderBy","sortedAndPagingData","array","comparator","stabilizedThis","map","el","index","sort","stableSort","Descending","getComparator","slice","Paper","Typography","component","align","TableContainer","TableHead","TableRow","dataHeadCell","TableCell","TableSortLabel","active","property","isAsc","handleRequestSort","disabled","sortable","TableBody","costDataRow","toLocaleDateString","EditOutlined","Delete","TableFooter","reduce","accumulator","currentValue","TablePagination","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","categories","Bills","Electronics","Grocery","Hobby","Hygiene","Another","display","flexDirection","Form","formType","useSelector","newOrEditExpense","utils","DateFnsUtils","initialValues","validate","values","errors","trim","onSubmit","handleSubmit","submitForm","resetForm","Expense","Cost","inputProps","min","FormControl","InputLabel","Select","Category","item","MenuItem","DatePicker","inputVariant","format","xs","dialogWrapper","top","dialogTitle","Dialog","actionType","open","paper","DialogTitle","flexGrow","Close","DialogContent","headerData","MainPage","App","createMuiTheme","overrides","MuiCssBaseline","html","boxSizing","body","maxWidth","store","configureStore","reducer","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"2IAmBYA,EASAC,EAQAC,E,yMAjBAF,K,cAAAA,E,0BAAAA,E,kBAAAA,E,cAAAA,E,kBAAAA,E,mBAAAA,M,cASAC,K,kBAAAA,E,YAAAA,E,oBAAAA,E,YAAAA,E,SAAAA,M,cAQAC,K,gBAAAA,E,mBAAAA,M,wEClCCC,EAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDC,OAAQ,CACNA,OAAQD,EAAME,QAAQ,QC4BXC,EArBiC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC5DC,EAAUT,IAChB,OACE,cAACU,EAAA,EAAD,CACEF,KAAMA,EACNG,UAAWF,EAAQN,OACnBG,MAAOA,EACPC,SAAUA,EACVK,QAAQ,WACRC,MAAM,oBACNC,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,EAAA,EAAD,U,SCMGC,EAhBmC,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,MAAOV,EAAgD,EAAhDA,QAASW,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClH,OACE,cAACC,EAAA,EAAD,CACEP,QAASA,EACTC,UAAWA,EACXC,MAAOA,EACPV,QAASA,EACTY,UAAWA,EACXC,KAAMA,EACNC,MAAOA,EAPT,SASGH,KCvBMvB,EAAYC,YAAW,CAClCE,OAAQ,CACNyB,UAAW,U,gBCFFC,EAAiD,CAC5D,CACEC,GAAI,EACJC,QAAS,SACTC,KAAM,IACNC,SAAU,cACVC,KAAM,IAAIC,MAGZ,CACEL,GAAI,EACJC,QAAS,uBACTC,KAAM,GACNC,SAAU,UACVC,KAAM,IAAIC,MAGZ,CACEL,GAAI,EACJC,QAAS,aACTC,KAAM,IACNC,SAAU,QACVC,KAAM,IAAIC,MAGZ,CACEL,GAAI,EACJC,QAAS,SACTC,KAAM,IACNC,SAAU,QACVC,KAAM,IAAIC,MAGZ,CACEL,GAAI,EACJC,QAAS,UACTC,KAAM,GACNC,SAAU,UACVC,KAAM,IAAIC,OC5BRC,EAAyC,CAC3CN,GAAIO,KAAKC,SACTP,QAAS,GACTC,KAAM,EACNC,SAAU,cACVC,KAAM,IAAIC,MAGRI,EAAmC,CACvCC,SAAUX,EACVY,uBAAuB,EACvBC,wBAAwB,EACxBC,mBAAoBP,GAGhBQ,EAAgBC,YAAY,CAChCC,KAAM,WACNP,eACAQ,SAAU,CACRC,WAAY,SAACC,EAAOC,GAClBD,EAAMT,SAASW,KAAKD,EAAOE,UAG7BC,YAAa,SAACJ,EAAOC,GACnB,IAAMI,EAAuBL,EAAMT,SAASe,WAAU,SAAAxB,GAAO,OAAIA,EAAQD,KAAOoB,EAAOE,QAAQtB,MAC/FmB,EAAMT,SAASc,GAAf,2BACKJ,EAAOE,SADZ,IAEEtB,GAAImB,EAAMN,mBAAmBb,MAIjC0B,cAAe,SAACP,EAAOC,GACrBD,EAAMT,SAAWS,EAAMT,SAASiB,QAC9B,SAAC1B,GAAD,OAAaA,EAAQD,KAAOoB,EAAOE,YAIvCM,oBAAqB,SAACT,GACpBA,EAAMR,uBAAwB,GAGhCkB,qBAAsB,SAACV,GACrBA,EAAMR,uBAAwB,EAC9BQ,EAAMN,mBAAqBP,GAG7BwB,qBAAsB,SAACX,EAAOC,GAC5BD,EAAMP,wBAAyB,EAC/BO,EAAMN,mBAAqBO,EAAOE,SAGpCS,sBAAuB,SAACZ,GACtBA,EAAMP,wBAAyB,EAC/BO,EAAMN,mBAAqBP,MAKpB0B,EAAsB,SAACb,GAAD,OAAsBA,EAAMT,UAClDuB,EAAiB,SAACd,GAAD,OAC5Ba,EAAoBb,GAAOT,UAChBwB,EAA8B,SAACf,GAAD,OACzCa,EAAoBb,GAAOR,uBAChBwB,EAA+B,SAAChB,GAAD,OAC1Ca,EAAoBb,GAAOP,wBAChBwB,EAA2B,SAACjB,GAAD,OACtCa,EAAoBb,GAAON,oB,EAUzBC,EAAcuB,QAPhBnB,E,EAAAA,WACAK,E,EAAAA,YACAG,G,EAAAA,cACAE,G,EAAAA,oBACAC,G,EAAAA,qBACAC,G,EAAAA,qBACAC,G,EAAAA,sBAGajB,KAAf,Q,mBClDewB,GA7BW,WACxB,IAAM3D,EAAUT,IACVqE,EAAWC,cAEXpE,EAAQqE,eACRC,EAAUC,aAAcvE,EAAMwE,YAAYC,GAAG,OAMnD,OACE,cAAC,IAAD,CAAYhE,UAAWF,EAAQN,OAA/B,SACE,eAACyE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWN,EAAU,MAAQ,SAAUO,QAAQ,gBAAgBC,WAAW,SAA1F,UACE,cAAC,EAAD,CAAaxE,KAAMgE,EAAU,SAAW,UACxC,cAAC,EAAD,CACEpD,QAT2B,WACjCiD,EAASX,OASH9C,QAAQ,YACRU,MAAM,UACND,UAAW,cAAC4D,EAAA,EAAD,IACXvD,MAAO8C,OAAUU,EAAY,CAACC,MAAO,SALvC,+B,UCTOC,GARmC,SAAC,GAAkC,IAAhC7D,EAA+B,EAA/BA,SAAUD,EAAqB,EAArBA,MAAOF,EAAc,EAAdA,QACpE,OACE,cAACiE,GAAA,EAAD,CAAYjE,QAASA,EAASZ,KAAK,QAAQc,MAAOA,EAAlD,SACGC,KCRD+D,GAAuB,SAAIC,EAAMC,EAAMC,GAC7C,OAAID,EAAEC,GAAWF,EAAEE,IACL,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,GCTEzF,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDwF,KAAM,CACJC,WAAY,OACZxF,OAAQD,EAAME,QAAQ,IAGxBwF,MAAO,CACLC,OAAQ,kBACRjE,UAAW1B,EAAME,QAAQ,GACzB,aAAc,CACZ0F,WAAY,MACZxE,MAAOpB,EAAM6F,QAAQC,QAAQC,KAC7BC,gBAAiBhG,EAAM6F,QAAQC,QAAQG,OAEzC,aAAc,CACZL,WAAY,OAEd,mBAAoB,CAClBI,gBAAiB,UACjBE,OAAQ,YAIZ,4BAA6B,CAC3BR,MAAO,CACL,aAAc,CACZS,SAAU,OACVC,QAAS,OAEX,aAAc,CACZD,SAAU,OACVC,QAAS,aCkIFC,GA/HqB,SAAC,GAA4B,IFHxB/D,EEGFgE,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACzCpC,EAAWC,cACX7D,EAAUT,KAcV0G,EAAqB,CAAC,EAAG,GAAI,IAhB2B,EAiBtCC,mBAAiB,GAjBqB,mBAiBvDC,EAjBuD,KAiBjDC,EAjBiD,OAkBxBF,mBACpCD,EAAmBE,IAnByC,mBAkBvDE,EAlBuD,KAkB1CC,EAlB0C,OAuCpCJ,mBAExB5G,EAAaiH,WAzC+C,mBAuCvDC,EAvCuD,KAuChDC,EAvCgD,OA0ChCP,mBAAiB,IA1Ce,mBA0CvDlB,EA1CuD,KA0C9C0B,EA1C8C,KAkDxDC,EF/DkB,SAAIC,EAAYC,GACtC,IAAMC,EAAiBF,EAAMG,KAAI,SAACC,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAH,EAAeI,MAAK,SAACpC,EAAGC,GACtB,IAAMyB,EAAQK,EAAW/B,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVyB,EAAoBA,EACjB1B,EAAE,GAAKC,EAAE,MAEX+B,EAAeC,KAAI,SAACC,GAAD,OAAQA,EAAG,MEwDXG,CAC1BpB,EFzEyB,SACzBS,EACAxB,GAEA,OAAOwB,IAAUlH,EAAa8H,WAC1B,SAACtC,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IEoE1CqC,CAAcb,EAAOxB,IACrBsC,MAAMnB,EAAOE,EAAaF,EAAOE,EAAcA,GAEjD,OACE,eAACkB,EAAA,EAAD,CAAOrH,UAAWF,EAAQiF,KAA1B,UACE,cAACuC,EAAA,EAAD,CAAYrH,QAAQ,KAAKsH,UAAU,KAAKC,MAAM,SAA9C,4BAGA,cAAC,GAAD,IACA,cAACC,EAAA,EAAD,UACE,eAAC,IAAD,CAAUzH,UAAWF,EAAQmF,MAA7B,UACE,cAACyC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACG7B,EAASe,KAAI,SAACe,GAAD,OACZ,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,OAAQjD,IAAY8C,EAAazF,KACjCgC,UACEW,IAAY8C,EAAazF,KACrBmE,EACAlH,EAAaiH,UAEnB5F,QAAS,kBA9BD,SAACuH,GACzB,IAAMC,EAAQnD,IAAYkD,GAAY1B,IAAUlH,EAAaiH,UAC7DE,EAAS0B,EAAQ7I,EAAa8H,WAAa9H,EAAaiH,WACxDG,EAAWwB,GA2BoBE,CAAkBN,EAAazF,OAC9CgG,UAAWP,EAAaQ,SAR1B,SAUGR,EAAa1H,SAXF0H,EAAazF,aAiBnC,cAACkG,EAAA,EAAD,UACG5B,EAAoBI,KAAI,SAACyB,GAAD,OACvB,eAACX,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,UAAYS,EAAYlH,UACxB,cAACyG,EAAA,EAAD,UAAYS,EAAYjH,OACxB,cAACwG,EAAA,EAAD,UAAYS,EAAYhH,WACxB,cAACuG,EAAA,EAAD,UAAYS,EAAY/G,KAAKgH,uBAC7B,eAACV,EAAA,EAAD,WACE,cAAC,GAAD,CACEpH,QAAS,WAjFzBiD,EAAST,GAiFiDqF,KAC1C3H,MAAM,UAFR,SAIE,cAAC6H,EAAA,EAAD,MAEF,cAAC,GAAD,CACE/H,QAAS,kBA9FEU,EA8FwBmH,EAAYnH,QA7F/DuC,EAASb,GAAc1B,IADG,IAACA,GA+FXR,MAAM,YAFR,SAIE,cAAC8H,EAAA,EAAD,WAhBSH,EAAYnH,SAsB/B,cAACuH,EAAA,EAAD,UACE,eAACf,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAW5H,QAAQ,OAAnB,8BACA,cAAC4H,EAAA,EAAD,CAAW5H,QAAQ,OAAnB,UFjH2B4B,EEiHyBgE,EFhHzDhE,EAAS8G,QAAO,SAACC,EAAaC,GACnC,OAAOD,EAAcC,EAAaxH,OAClC,gBEmHE,cAACyH,EAAA,EAAD,CACE/C,mBAAoBA,EACpBgD,MAAOlD,EAASmD,OAChB7C,YAAaA,EACbF,KAAMA,EACNgD,aAhGmB,SACvBC,EACAC,GAEAjD,EAAQiD,IA6FJC,oBA1F0B,SAC9BF,GAEA9C,EAAeiD,SAASH,EAAMI,OAAO3J,QACrCuG,EAAQ,U,qHCrECqD,GAAa,CACxBrK,EAAgBsK,MAChBtK,EAAgBuK,YAChBvK,EAAgBwK,QAChBxK,EAAgByK,MAChBzK,EAAgB0K,QAChB1K,EAAgB2K,SCNLxK,GAAYC,YAAW,CAClCyF,KAAM,CACJ,yBAA0B,CACxBP,MAAO,OACPhF,OAAQ,SACRsK,QAAS,OACTC,cAAe,aCkINC,GA5GmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7BvG,EAAWC,cACX7B,EAAwBoI,YAAY7G,GACpCtB,EAAyBmI,YAAY5G,GACrC6G,EAAmBD,YAAY3G,GAC/BzD,EAAUT,KAYhB,OACE,cAAC,KAAD,CAAyB+K,MAAOC,KAAhC,SACE,cAAC,KAAD,CACEC,cAAeH,EACfI,SAAU,SAACC,GACT,IAAMC,EAAqB,GAO3B,OANKD,EAAOpJ,QAAQsJ,SAClBD,EAAOrJ,QAAU,uBAEdoJ,EAAOnJ,OACVoJ,EAAOpJ,KAAO,oBAEToJ,GAETE,SAAU,SAAAH,GAAM,OAxBD,SAACA,GAChB1I,GACF4B,EAASrB,EAAW,2BAAKmI,GAAN,IAAcrJ,GAAIO,KAAKC,aAC1C+B,EAASV,OACAjB,IACT2B,EAAShB,EAAY8H,IACrB9G,EAASR,OAkBa0H,CAAaJ,IAZnC,SAcG,gBAAGK,EAAH,EAAGA,WAAYC,EAAf,EAAeA,UAAf,OACC,eAAC,KAAD,CAAY9K,UAAWF,EAAQiF,KAA/B,UACE,cAAC,KAAD,CACElE,WAAS,EACTZ,QAAQ,WACRC,MAAM,UACNiC,KAAMhD,EAAY4L,QAClBxD,UAAWxH,OAGb,cAAC,KAAD,CACEE,QAAQ,WACRC,MAAM,OACNiC,KAAMhD,EAAY6L,KAClBlK,KAAK,SACLD,WAAS,EACT0G,UAAWxH,KACXI,WAAY,CAAE8K,WAAY,CAAEC,IAAK,MAGnC,eAACC,GAAA,EAAD,CAAatK,WAAS,EAACZ,QAAQ,WAA/B,UACE,cAACmL,GAAA,EAAD,uBACA,cAAC,KAAD,CACE7D,UAAW8D,KACXnL,MAAM,WACNiC,KAAMhD,EAAYmM,SAHpB,SAKG/B,GAAW1C,KAAI,SAAC0E,GAAD,OACd,cAACC,GAAA,EAAD,CAAqB7L,MAAO4L,EAA5B,SACGA,GADYA,WAOrB,cAAC,KAAD,CACEhE,UAAWkE,KACX5K,WAAS,EACT6K,aAAa,WACbC,OAAO,cACPxJ,KAAMhD,EAAYqC,KAClBtB,MAAM,SAGR,eAAC+D,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAAS3E,QAAS,EAA1C,UACE,cAACwE,EAAA,EAAD,CAAMsH,MAAI,EAACK,GAAI,EAAf,SACE,cAAC,EAAD,CACE3L,QAAQ,YACRQ,QAASqK,EACTnK,MAAM,UACNE,WAAS,EACTC,KAAK,QALP,qBAUF,cAACmD,EAAA,EAAD,CAAMsH,MAAI,EAACK,GAAI,EAAf,SACE,cAAC,EAAD,CACE3L,QAAQ,YACRQ,QAASoK,EACTlK,MAAM,UACNE,WAAS,EACTC,KAAK,SALP,SAOgB,QAAbmJ,EAAqB,MAAQ,uBC7HnC5K,GAAYC,aAAW,SAACC,GAAD,MAAmB,CACrDsM,cAAe,CACblG,QAASpG,EAAME,QAAQ,GACvBa,SAAU,WACVwL,IAAKvM,EAAME,QAAQ,IAGrBsM,YAAa,CACXpG,QAAS,WC0CEqG,GA/BuB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACjCvI,EAAWC,cACX7D,EAAUT,KAUhB,OACE,eAAC,KAAD,CAAW6M,MAAM,EAAMpM,QAAS,CAAEqM,MAAOrM,EAAQ+L,eAAjD,UACE,cAACO,GAAA,EAAD,CAAapM,UAAWF,EAAQiM,YAAhC,SACE,sBAAKhL,MAAO,CAAE+I,QAAS,QAAvB,UACE,cAACxC,EAAA,EAAD,CAAYrH,QAAQ,KAAKsH,UAAU,KAAKxG,MAAO,CAAEsL,SAAU,GAA3D,SACkB,QAAfJ,EAAuB,cAAgB,iBAE1C,cAAC,GAAD,CAAcxL,QAfF,WACC,QAAfwL,EACFvI,EAASV,MACe,SAAfiJ,GACTvI,EAASR,OAW+BvC,MAAM,YAA1C,SACE,cAAC2L,GAAA,EAAD,WAIN,cAACC,GAAA,EAAD,UACE,cAAC,GAAD,CAAMtC,SAAUgC,UC5CXO,GAA8C,CACzD,CACErK,KAAM,UACNjC,MAAO,UACPkI,UAAU,GAGZ,CACEjG,KAAM,OACNjC,MAAO,SACPkI,UAAU,GAGZ,CACEjG,KAAM,WACNjC,MAAO,WACPkI,UAAU,GAGZ,CACEjG,KAAM,OACNjC,MAAO,OACPkI,UAAU,GAGZ,CACEjG,KAAM,UACNjC,MAAO,gBACPkI,UAAU,ICLCqE,GAdY,WACzB,IAAM5K,EAAWqI,YAAY9G,GACvBtB,EAAwBoI,YAAY7G,GACpCtB,EAAyBmI,YAAY5G,GAE3C,OACE,qCACE,cAAC,GAAD,CAAOuC,SAAUhE,EAAUiE,SAAU0G,KACpC1K,GAAyB,cAAC,GAAD,CAAQmK,WAAW,QAC5ClK,GAA0B,cAAC,GAAD,CAAQkK,WAAW,aCbrCS,GAJO,WACpB,OAAO,cAAC,GAAD,K,UCFInN,GAAQoN,aAAe,CAClCC,UAAW,CACTC,eAAgB,CACd,UAAW,CACTC,KAAM,CACJC,UAAW,cAGbC,KAAM,CACJxN,OAAQ,YACRyN,SAAU,eCTPC,GAAQC,YAAe,CAClCC,QAAS,CACPvL,SAAUI,MCGdoL,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,eAACM,EAAA,EAAD,CAAejO,MAAOA,GAAtB,UACE,cAACkO,EAAA,EAAD,IACA,cAAC,GAAD,WAINC,SAASC,eAAe,W","file":"static/js/main.775ef693.chunk.js","sourcesContent":["export interface SingleExpenseInterface {\r\n  id: number;\r\n  expense: string;\r\n  cost: number;\r\n  category: string;\r\n  date: Date;\r\n}\r\n\r\nexport interface TableHeaderDataInterface {\r\n  name: string;\r\n  label: string;\r\n  sortable: boolean;\r\n}\r\n\r\nexport interface ErrorTypes {\r\n  expense?: string;\r\n  cost?: string;\r\n}\r\n\r\nexport enum CategoriesTypes {\r\n  Bills = \"Bills\",\r\n  Electronics = \"Electronics\",\r\n  Grocery = \"Grocery\",\r\n  Hobby = \"Hobby\",\r\n  Hygiene = \"Hygiene\",\r\n  Another = \"Another\",\r\n}\r\n\r\nexport enum DataIdTypes {\r\n  Expense = \"expense\",\r\n  Cost = \"cost\",\r\n  Category = \"category\",\r\n  Date = \"date\",\r\n  id = \"id\",\r\n}\r\n\r\nexport enum SortingOrder {\r\n  Ascending = \"asc\",\r\n  Descending = \"desc\",\r\n}\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface SearchInputProps {\r\n  value?: string;\r\n  size?: \"small\" | \"medium\" | undefined\r\n  onChange?: () => void;\r\n}\r\n\r\nconst SearchInput: React.FC<SearchInputProps> = ({ value, onChange, size }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      size={size}\r\n      className={classes.margin}\r\n      value={value}\r\n      onChange={onChange}\r\n      variant=\"outlined\"\r\n      label=\"Find your expense\"\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <Search />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\ninterface DialogButtonProps {\r\n  onClick: () => void;\r\n  startIcon?: React.ReactNode;\r\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined\r\n  variant?: \"text\" | \"outlined\" | \"contained\" | undefined\r\n  children?: React.ReactText;\r\n  fullWidth?: boolean;\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  style?: {} | undefined;\r\n}\r\n\r\nconst DialogButton: React.FC<DialogButtonProps> = ({ onClick, startIcon, color, variant, children, fullWidth, type, style }) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      startIcon={startIcon}\r\n      color={color}\r\n      variant={variant}\r\n      fullWidth={fullWidth}\r\n      type={type}\r\n      style={style}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DialogButton;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  margin: {\r\n    marginTop: \"20px\",\r\n  },\r\n});\r\n","import { SingleExpenseInterface } from \"../interfaces\";\r\n\r\nexport const exampleBodyData: Array<SingleExpenseInterface> = [\r\n  {\r\n    id: 0,\r\n    expense: \"New TV\",\r\n    cost: 2000,\r\n    category: \"Electronics\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    expense: \"Fruits and Vegetable\",\r\n    cost: 10,\r\n    category: \"Grocery\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    expense: \"Electicity\",\r\n    cost: 250,\r\n    category: \"Bills\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    expense: \"Vinyls\",\r\n    cost: 300,\r\n    category: \"Hobby\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    expense: \"Shampoo\",\r\n    cost: 20,\r\n    category: \"Hygiene\",\r\n    date: new Date(),\r\n  },\r\n];\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { exampleBodyData } from \"../data/exampleBodyData\";\r\nimport { RootState } from \"../store\";\r\nimport { SingleExpenseInterface } from \"../interfaces\";\r\n\r\ntype ExpensesSliceState = {\r\n  expenses: Array<SingleExpenseInterface>;\r\n  isAddExpenseModalOpen: boolean;\r\n  isEditExpenseModalOpen: boolean;\r\n  newOrEditedExpense: SingleExpenseInterface;\r\n};\r\n\r\nconst initialExpense: SingleExpenseInterface = {\r\n    id: Math.random(),\r\n    expense: \"\",\r\n    cost: 0,\r\n    category: \"Electronics\",\r\n    date: new Date(),\r\n}\r\n\r\nconst initialState: ExpensesSliceState = {\r\n  expenses: exampleBodyData,\r\n  isAddExpenseModalOpen: false,\r\n  isEditExpenseModalOpen: false,\r\n  newOrEditedExpense: initialExpense,\r\n};\r\n\r\nconst ExpensesSlice = createSlice({\r\n  name: \"expenses\",\r\n  initialState,\r\n  reducers: {\r\n    addExpense: (state, action: PayloadAction<SingleExpenseInterface>) => {\r\n      state.expenses.push(action.payload);\r\n    },\r\n\r\n    editExpense: (state, action: PayloadAction<SingleExpenseInterface>) => {\r\n      const indexOfEditedExpense = state.expenses.findIndex(expense => expense.id === action.payload.id)\r\n      state.expenses[indexOfEditedExpense] = {\r\n        ...action.payload,\r\n        id: state.newOrEditedExpense.id,\r\n      };\r\n    },\r\n\r\n    removeExpense: (state, action: PayloadAction<number>) => {\r\n      state.expenses = state.expenses.filter(\r\n        (expense) => expense.id !== action.payload\r\n      );\r\n    },\r\n\r\n    openAddExpenseModal: (state) => {\r\n      state.isAddExpenseModalOpen = true;\r\n    },\r\n\r\n    closeAddExpenseModal: (state) => {\r\n      state.isAddExpenseModalOpen = false;\r\n      state.newOrEditedExpense = initialExpense;\r\n    },\r\n\r\n    openEditExpenseModal: (state, action: PayloadAction<SingleExpenseInterface>) => {\r\n      state.isEditExpenseModalOpen = true;\r\n      state.newOrEditedExpense = action.payload;\r\n    },\r\n\r\n    closeEditExpenseModal: (state) => {\r\n      state.isEditExpenseModalOpen = false;\r\n      state.newOrEditedExpense = initialExpense;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectExpensesState = (state: RootState) => state.expenses;\r\nexport const selectExpenses = (state: RootState) =>\r\n  selectExpensesState(state).expenses;\r\nexport const selectIsAddExpenseModalOpen = (state: RootState) =>\r\n  selectExpensesState(state).isAddExpenseModalOpen;\r\nexport const selectIsEditExpenseModalOpen = (state: RootState) =>\r\n  selectExpensesState(state).isEditExpenseModalOpen;\r\nexport const selectNewOrEditedExpense = (state: RootState) =>\r\n  selectExpensesState(state).newOrEditedExpense;\r\n\r\nexport const {\r\n  addExpense,\r\n  editExpense,\r\n  removeExpense,\r\n  openAddExpenseModal,\r\n  closeAddExpenseModal,\r\n  openEditExpenseModal,\r\n  closeEditExpenseModal,\r\n} = ExpensesSlice.actions;\r\n\r\nexport default ExpensesSlice.reducer;\r\n","import React from \"react\";\r\nimport { Grid, Toolbar as MuiToolbar } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport SearchInput from \"../../atoms/SearchInput\";\r\nimport DialogButton from \"../../atoms/DialogButton\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openAddExpenseModal } from \"../../../slices/ExpensesSlice\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst Toolbar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n  const openAddExpenseModalHandler = () => {\r\n    dispatch(openAddExpenseModal());\r\n  };\r\n\r\n  return (\r\n    <MuiToolbar className={classes.margin}>\r\n      <Grid container direction={matches ? \"row\" : \"column\"} justify=\"space-between\" alignItems=\"center\">\r\n        <SearchInput size={matches ? \"medium\" : \"small\"}/>\r\n        <DialogButton\r\n          onClick={openAddExpenseModalHandler}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<Add />}\r\n          style={matches ? undefined : {width: 242 + \"px\"}}\r\n        >\r\n          Add Expense\r\n        </DialogButton>\r\n      </Grid>\r\n    </MuiToolbar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\ninterface ActionButtonProps {\r\n  children: React.ReactElement;\r\n  color: \"primary\" | \"secondary\";\r\n  onClick: () => void;\r\n}\r\n\r\nconst ActionButton: React.FC<ActionButtonProps> = ({ children, color, onClick }) => {\r\n  return (\r\n    <IconButton onClick={onClick} size=\"small\" color={color}>\r\n      {children}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import {SortingOrder, SingleExpenseInterface} from \"../../../interfaces\";\r\n\r\ntype Order = SortingOrder.Ascending | SortingOrder.Descending;\r\n\r\nconst descendingComparator = <T>(a: T, b: T, orderBy: keyof T) => {\r\nif (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n};\r\n  \r\nexport const getComparator = <Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number => {\r\n    return order === SortingOrder.Descending\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n};\r\n  \r\nexport const stableSort = <T>(array: T[], comparator: (a: T, b: T) => number) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n};\r\n\r\nexport const calculateSummaryExpenses = (expenses: Array<SingleExpenseInterface>) => {\r\n  return expenses.reduce((accumulator, currentValue) => {\r\n    return accumulator + currentValue.cost;\r\n  },0)\r\n}","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: \"20px\",\r\n    margin: theme.spacing(3)\r\n  },\r\n\r\n  table: {\r\n    border: \"2px solig green\",\r\n    marginTop: theme.spacing(3),\r\n    \"& thead th\": {\r\n      fontWeight: \"600\",\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#fffbf2\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n\r\n  \"@media (max-width: 670px)\": {\r\n    table: {\r\n      \"& thead th\": {\r\n        fontSize: \"10px\",\r\n        padding: \"8px\"\r\n      },\r\n      \"& tbody td\": {\r\n        fontSize: \"10px\",\r\n        padding: \"8px\"\r\n      },\r\n    },\r\n  },\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { EditOutlined, Delete } from \"@material-ui/icons\";\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table as MuiTable,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  TableFooter,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  SingleExpenseInterface,\r\n  TableHeaderDataInterface,\r\n  SortingOrder,\r\n} from \"../../../interfaces\";\r\nimport Toolbar from \"../../molecules/Toolbar\";\r\nimport ActionButton from \"../../atoms/ActionButton\";\r\nimport {\r\n  removeExpense,\r\n  openEditExpenseModal,\r\n} from \"../../../slices/ExpensesSlice\";\r\nimport { getComparator, stableSort, calculateSummaryExpenses } from \"./helpers\";\r\nimport { useStyles } from \"./styles\";\r\n\r\n\r\ninterface TableProps {\r\n  bodyData: Array<SingleExpenseInterface>;\r\n  headData: Array<TableHeaderDataInterface>;\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ bodyData, headData }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleRemoveExpense = (id: number) => {\r\n    dispatch(removeExpense(id));\r\n  };\r\n\r\n  const handleOpenEditExpenseModal = (\r\n    editedExpense: SingleExpenseInterface\r\n  ) => {\r\n    dispatch(openEditExpenseModal(editedExpense));\r\n  };\r\n\r\n  //Pagination variables of state\r\n\r\n  const rowsPerPageOptions = [5, 10, 25];\r\n  const [page, setPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(\r\n    rowsPerPageOptions[page]\r\n  );\r\n\r\n  //Pagination handle functions\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\r\n    newPage: number\r\n  ): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ): void => {\r\n    setRowsPerPage(parseInt(event.target.value));\r\n    setPage(0);\r\n  };\r\n\r\n  //Sorting variables of state\r\n  const [order, setOrder] = useState<\r\n    SortingOrder.Ascending | SortingOrder.Descending\r\n  >(SortingOrder.Ascending);\r\n  const [orderBy, setOrderBy] = useState<string>(\"\");\r\n\r\n  const handleRequestSort = (property: string) => {\r\n    const isAsc = orderBy === property && order === SortingOrder.Ascending;\r\n    setOrder(isAsc ? SortingOrder.Descending : SortingOrder.Ascending);\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const sortedAndPagingData = stableSort<any>(\r\n    bodyData,\r\n    getComparator(order, orderBy)\r\n  ).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography variant=\"h3\" component=\"h1\" align=\"center\">\r\n        Budget Manager\r\n      </Typography>\r\n      <Toolbar />\r\n      <TableContainer>\r\n        <MuiTable className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {headData.map((dataHeadCell) => (\r\n                <TableCell key={dataHeadCell.name}>\r\n                  <TableSortLabel\r\n                    active={orderBy === dataHeadCell.name}\r\n                    direction={\r\n                      orderBy === dataHeadCell.name\r\n                        ? order\r\n                        : SortingOrder.Ascending\r\n                    }\r\n                    onClick={() => handleRequestSort(dataHeadCell.name)}\r\n                    disabled={!dataHeadCell.sortable}\r\n                  >\r\n                    {dataHeadCell.label}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedAndPagingData.map((costDataRow) => (\r\n              <TableRow key={costDataRow.id}>\r\n                <TableCell>{costDataRow.expense}</TableCell>\r\n                <TableCell>{costDataRow.cost}</TableCell>\r\n                <TableCell>{costDataRow.category}</TableCell>\r\n                <TableCell>{costDataRow.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton\r\n                    onClick={() => handleOpenEditExpenseModal(costDataRow)}\r\n                    color=\"primary\"\r\n                  >\r\n                    <EditOutlined />\r\n                  </ActionButton>\r\n                  <ActionButton\r\n                    onClick={() => handleRemoveExpense(costDataRow.id)}\r\n                    color=\"secondary\"\r\n                  >\r\n                    <Delete />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TableCell variant=\"head\">Summary Expenses</TableCell>\r\n              <TableCell variant=\"head\">{calculateSummaryExpenses(bodyData)}</TableCell>\r\n            </TableRow>\r\n          </TableFooter>\r\n        </MuiTable>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        count={bodyData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { CategoriesTypes } from \"../interfaces\";\r\n\r\nexport const categories = [\r\n  CategoriesTypes.Bills,\r\n  CategoriesTypes.Electronics,\r\n  CategoriesTypes.Grocery,\r\n  CategoriesTypes.Hobby,\r\n  CategoriesTypes.Hygiene,\r\n  CategoriesTypes.Another,\r\n];\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"100%\",\r\n      margin: \"16px 0\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, MenuItem, Grid } from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form as FormikForm, Field } from \"formik\";\r\nimport { TextField, Select } from \"formik-material-ui\";\r\nimport { DatePicker } from \"formik-material-ui-pickers\";\r\nimport DialogButton from \"../../atoms/DialogButton\";\r\nimport { categories } from \"../../../data/categories\";\r\nimport { useStyles } from \"./styles\";\r\nimport {\r\n  closeAddExpenseModal,\r\n  closeEditExpenseModal,\r\n  selectIsAddExpenseModalOpen,\r\n  selectIsEditExpenseModalOpen,\r\n  addExpense,\r\n  selectNewOrEditedExpense,\r\n  editExpense,\r\n} from \"../../../slices/ExpensesSlice\";\r\nimport {\r\n  ErrorTypes,\r\n  DataIdTypes,\r\n  SingleExpenseInterface,\r\n} from \"../../../interfaces\";\r\n\r\ninterface FormProps {\r\n  formType: \"add\" | \"edit\";\r\n}\r\n\r\nconst Form: React.FC<FormProps> = ({ formType }) => {\r\n  const dispatch = useDispatch();\r\n  const isAddExpenseModalOpen = useSelector(selectIsAddExpenseModalOpen);\r\n  const isEditExpenseModalOpen = useSelector(selectIsEditExpenseModalOpen);\r\n  const newOrEditExpense = useSelector(selectNewOrEditedExpense);\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (values: SingleExpenseInterface) => {\r\n    if (isAddExpenseModalOpen) {\r\n      dispatch(addExpense({ ...values, id: Math.random() }));\r\n      dispatch(closeAddExpenseModal());\r\n    } else if (isEditExpenseModalOpen) {\r\n      dispatch(editExpense(values));\r\n      dispatch(closeEditExpenseModal());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Formik\r\n        initialValues={newOrEditExpense}\r\n        validate={(values) => {\r\n          const errors: ErrorTypes = {};\r\n          if (!values.expense.trim()) {\r\n            errors.expense = \"Expense is required\";\r\n          }\r\n          if (!values.cost) {\r\n            errors.cost = \"Cost is required\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={values => handleSubmit(values)}\r\n      >\r\n        {({ submitForm, resetForm }) => (\r\n          <FormikForm className={classes.root}>\r\n            <Field\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Expense\"\r\n              name={DataIdTypes.Expense}\r\n              component={TextField}\r\n            />\r\n\r\n            <Field\r\n              variant=\"outlined\"\r\n              label=\"Cost\"\r\n              name={DataIdTypes.Cost}\r\n              type=\"number\"\r\n              fullWidth\r\n              component={TextField}\r\n              InputProps={{ inputProps: { min: 0 } }}\r\n            />\r\n\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel>Category</InputLabel>\r\n              <Field\r\n                component={Select}\r\n                label=\"Category\"\r\n                name={DataIdTypes.Category}\r\n              >\r\n                {categories.map((item) => (\r\n                  <MenuItem key={item} value={item}>\r\n                    {item}\r\n                  </MenuItem>\r\n                ))}\r\n              </Field>\r\n            </FormControl>\r\n\r\n            <Field\r\n              component={DatePicker}\r\n              fullWidth\r\n              inputVariant=\"outlined\"\r\n              format=\"MMM/dd/yyyy\"\r\n              name={DataIdTypes.Date}\r\n              label=\"Date\"\r\n            />\r\n\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              <Grid item xs={5}>\r\n                <DialogButton\r\n                  variant=\"contained\"\r\n                  onClick={resetForm}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  type=\"reset\"\r\n                >\r\n                  Reset\r\n                </DialogButton>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <DialogButton\r\n                  variant=\"contained\"\r\n                  onClick={submitForm}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  type=\"submit\"\r\n                >\r\n                  {formType === \"add\" ? \"Add\" : \"Edit\"}\r\n                </DialogButton>\r\n              </Grid>\r\n            </Grid>\r\n          </FormikForm>\r\n        )}\r\n      </Formik>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  dialogWrapper: {\r\n    padding: theme.spacing(2),\r\n    position: \"absolute\",\r\n    top: theme.spacing(5),\r\n  },\r\n\r\n  dialogTitle: {\r\n    padding: \"0px\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport {\r\n  Dialog as MuiDialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Form from \"../../organisms/Form\";\r\nimport ActionButton from \"../../atoms/ActionButton\";\r\nimport {\r\n  closeAddExpenseModal,\r\n  closeEditExpenseModal,\r\n} from \"../../../slices/ExpensesSlice\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface DialogProps {\r\n  actionType: \"edit\" | \"add\";\r\n}\r\n\r\nconst Dialog: React.FC<DialogProps> = ({ actionType }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    if (actionType === \"add\") {\r\n      dispatch(closeAddExpenseModal());\r\n    } else if (actionType === \"edit\") {\r\n      dispatch(closeEditExpenseModal());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MuiDialog open={true} classes={{ paper: classes.dialogWrapper }}>\r\n      <DialogTitle className={classes.dialogTitle}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography variant=\"h5\" component=\"h2\" style={{ flexGrow: 1 }}>\r\n            {actionType === \"add\" ? \"Add Expense\" : \"Edit Expense\"}\r\n          </Typography>\r\n          <ActionButton onClick={handleClose} color=\"secondary\">\r\n            <Close />\r\n          </ActionButton>\r\n        </div>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Form formType={actionType} />\r\n      </DialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import { TableHeaderDataInterface } from \"../interfaces\";\r\n\r\nexport const headerData: Array<TableHeaderDataInterface> = [\r\n  {\r\n    name: \"expense\",\r\n    label: \"Expense\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"cost\",\r\n    label: \"Cost $\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"category\",\r\n    label: \"Category\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"date\",\r\n    label: \"Date\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"actions\",\r\n    label: \"Edit / Remove\",\r\n    sortable: false,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"../../organisms/Table\";\r\nimport Dialog from \"../../templates/Dialog\";\r\nimport { headerData } from \"../../../data/headersData\";\r\nimport {\r\n  selectExpenses,\r\n  selectIsEditExpenseModalOpen,\r\n  selectIsAddExpenseModalOpen,\r\n} from \"../../../slices/ExpensesSlice\";\r\n\r\nconst MainPage: React.FC = () => {\r\n  const expenses = useSelector(selectExpenses);\r\n  const isAddExpenseModalOpen = useSelector(selectIsAddExpenseModalOpen);\r\n  const isEditExpenseModalOpen = useSelector(selectIsEditExpenseModalOpen);\r\n\r\n  return (\r\n    <>\r\n      <Table bodyData={expenses} headData={headerData} />\r\n      {isAddExpenseModalOpen && <Dialog actionType=\"add\" />}\r\n      {isEditExpenseModalOpen && <Dialog actionType=\"edit\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\nimport MainPage from \"./components/pages/MainPage\";\n\nconst App: React.FC = () => {\n  return <MainPage />;\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        html: {\r\n          boxSizing: \"border-box\",\r\n        },\r\n\r\n        body: {\r\n          margin: \"30px auto\",\r\n          maxWidth: \"1000px\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport ExpensesSlice from \"./slices/ExpensesSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    expenses: ExpensesSlice,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport App from \"./App\";\r\nimport { theme } from \"./theme/theme\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}