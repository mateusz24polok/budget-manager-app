{"version":3,"sources":["components/organisms/Table/styles.tsx","components/atoms/SearchInput/styles.tsx","components/atoms/SearchInput/index.tsx","components/atoms/DialogButton/index.tsx","components/molecules/Toolbar/style.tsx","exampleData.tsx","slices/ExpensesSlice.ts","components/molecules/Toolbar/index.tsx","components/atoms/ActionButton/index.tsx","components/organisms/Table/helpers.ts","components/organisms/Table/index.tsx","components/organisms/Form/index.tsx","components/templates/Dialog/index.tsx","components/pages/MainPage/index.tsx","App.tsx","theme/theme.tsx","store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","table","border","marginTop","spacing","fontWeight","color","palette","primary","main","backgroundColor","light","cursor","fontSize","newButton","textTransform","newInput","width","padding","margin","SearchInput","value","onChange","classes","TextField","className","variant","label","InputProps","startAdornment","InputAdornment","position","Search","DialogButton","onClick","startIcon","children","fullWidth","type","Button","exampleData","id","expense","cost","category","date","Date","exampleHeaderData","name","sortable","initialExpense","Math","random","initialState","expenses","isAddExpenseModalOpen","isEditExpenseModalOpen","newOrEditedExpense","ExpensesSlice","createSlice","reducers","addExpense","state","action","push","payload","editExpense","indexOfEditedExpense","findIndex","removeExpense","filter","openAddExpenseModal","closeAddExpenseModal","openEditExpenseModal","closeEditExpenseModal","selectExpensesState","selectExpenses","selectIsAddExpenseModalOpen","selectIsEditExpenseModalOpen","selectNewOrEditedExpense","actions","Toolbar","dispatch","useDispatch","Grid","container","justify","alignItems","Add","ActionButton","IconButton","size","descendingComparator","a","b","orderBy","Table","bodyData","headData","rowsPerPageOptions","useState","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","setOrderBy","sortedAndPagingData","array","comparator","stabilizedThis","map","el","index","sort","stableSort","getComparator","slice","Paper","TableContainer","TableHead","TableRow","dataHeadCell","TableCell","TableSortLabel","active","direction","property","disabled","TableBody","costDataRow","toLocaleDateString","EditOutlined","Delete","TablePagination","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","categories","root","display","flexDirection","Form","formType","useSelector","newOrEditExpense","utils","DateFnsUtils","initialValues","validate","values","errors","trim","onSubmit","submitForm","resetForm","component","inputProps","min","FormControl","InputLabel","Select","item","MenuItem","DatePicker","inputVariant","format","xs","dialogWrapper","top","dialogTitle","Dialog","actionType","open","paper","DialogTitle","style","Typography","flexGrow","Close","DialogContent","MainPage","App","createMuiTheme","overrides","MuiCssBaseline","html","boxSizing","body","maxWidth","store","configureStore","reducer","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.eea67c35.chunk.js","sourcesContent":["import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  table: {\r\n    border: \"2px solig green\",\r\n    marginTop: theme.spacing(3),\r\n    \"& thead th\": {\r\n      fontWeight: \"600\",\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#fffbf2\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n\r\n  \"@media (max-width: 960px)\": {\r\n    table: {\r\n      \"& thead th\": {\r\n        fontSize: \"10px\",\r\n      },\r\n      \"& tbody td\": {\r\n        fontSize: \"10px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  newButton: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n\r\n  newInput: {\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface SearchInputProps {\r\n  value?: string;\r\n  onChange?: () => void;\r\n}\r\n\r\nconst SearchInput: React.FC<SearchInputProps> = ({ value, onChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      className={classes.margin}\r\n      value={value}\r\n      onChange={onChange}\r\n      variant=\"outlined\"\r\n      label=\"Find your expense\"\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <Search />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface DialogButtonProps {\r\n  onClick: () => void;\r\n  startIcon?: React.ReactNode;\r\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined\r\n  variant?: \"text\" | \"outlined\" | \"contained\" | undefined\r\n  children?: React.ReactText;\r\n  fullWidth?: boolean;\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n}\r\n\r\nconst DialogButton: React.FC<DialogButtonProps> = ({ onClick, startIcon, color, variant, children, fullWidth, type }) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      startIcon={startIcon}\r\n      color={color}\r\n      variant={variant}\r\n      fullWidth={fullWidth}\r\n      type={type}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DialogButton;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}));\r\n","import { SingleExpense, TableHeaderData } from \"./interfaces\";\r\n\r\nexport const exampleData: Array<SingleExpense> = [\r\n  {\r\n    id: 0,\r\n    expense: \"New TV\",\r\n    cost: 2000,\r\n    category: \"Electronics\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    expense: \"Fruits and Vegetable\",\r\n    cost: 10,\r\n    category: \"Grocery\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    expense: \"Electicity\",\r\n    cost: 250,\r\n    category: \"Bills\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    expense: \"Vinyls\",\r\n    cost: 300,\r\n    category: \"Hobby\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    expense: \"Shampoo\",\r\n    cost: 20,\r\n    category: \"Hygiene\",\r\n    date: new Date(),\r\n  },\r\n];\r\n\r\nexport const exampleHeaderData: Array<TableHeaderData> = [\r\n  {\r\n    name: \"expense\",\r\n    label: \"Expense\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"cost\",\r\n    label: \"Cost $\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"category\",\r\n    label: \"Category\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"date\",\r\n    label: \"Date\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"actions\",\r\n    label: \"Edit / Remove\",\r\n    sortable: false,\r\n  },\r\n];\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { exampleData } from \"../exampleData\";\r\nimport { RootState } from \"../store\";\r\nimport { SingleExpense } from \"../interfaces\";\r\n\r\ntype ExpensesSliceState = {\r\n  expenses: Array<SingleExpense>;\r\n  isAddExpenseModalOpen: boolean;\r\n  isEditExpenseModalOpen: boolean;\r\n  newOrEditedExpense: SingleExpense;\r\n};\r\n\r\nconst initialExpense: SingleExpense = {\r\n    id: Math.random(),\r\n    expense: \"\",\r\n    cost: 0,\r\n    category: \"Electronics\",\r\n    date: new Date(),\r\n}\r\n\r\nconst initialState: ExpensesSliceState = {\r\n  expenses: exampleData,\r\n  isAddExpenseModalOpen: false,\r\n  isEditExpenseModalOpen: false,\r\n  newOrEditedExpense: initialExpense,\r\n};\r\n\r\nconst ExpensesSlice = createSlice({\r\n  name: \"expenses\",\r\n  initialState,\r\n  reducers: {\r\n    addExpense: (state, action: PayloadAction<SingleExpense>) => {\r\n      state.expenses.push(action.payload);\r\n    },\r\n\r\n    editExpense: (state, action: PayloadAction<SingleExpense>) => {\r\n      const indexOfEditedExpense = state.expenses.findIndex(expense => expense.id === action.payload.id)\r\n      state.expenses[indexOfEditedExpense] = {\r\n        ...action.payload,\r\n        id: state.newOrEditedExpense.id,\r\n      };\r\n    },\r\n\r\n    removeExpense: (state, action: PayloadAction<number>) => {\r\n      state.expenses = state.expenses.filter(\r\n        (expense) => expense.id !== action.payload\r\n      );\r\n    },\r\n\r\n    openAddExpenseModal: (state) => {\r\n      state.isAddExpenseModalOpen = true;\r\n    },\r\n\r\n    closeAddExpenseModal: (state) => {\r\n      state.isAddExpenseModalOpen = false;\r\n      state.newOrEditedExpense = initialExpense;\r\n    },\r\n\r\n    openEditExpenseModal: (state, action: PayloadAction<SingleExpense>) => {\r\n      state.isEditExpenseModalOpen = true;\r\n      state.newOrEditedExpense = action.payload;\r\n    },\r\n\r\n    closeEditExpenseModal: (state) => {\r\n      state.isEditExpenseModalOpen = false;\r\n      state.newOrEditedExpense = initialExpense;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectExpensesState = (state: RootState) => state.expenses;\r\nexport const selectExpenses = (state: RootState) =>\r\n  selectExpensesState(state).expenses;\r\nexport const selectIsAddExpenseModalOpen = (state: RootState) =>\r\n  selectExpensesState(state).isAddExpenseModalOpen;\r\nexport const selectIsEditExpenseModalOpen = (state: RootState) =>\r\n  selectExpensesState(state).isEditExpenseModalOpen;\r\nexport const selectNewOrEditedExpense = (state: RootState) =>\r\n  selectExpensesState(state).newOrEditedExpense;\r\n\r\nexport const {\r\n  addExpense,\r\n  editExpense,\r\n  removeExpense,\r\n  openAddExpenseModal,\r\n  closeAddExpenseModal,\r\n  openEditExpenseModal,\r\n  closeEditExpenseModal,\r\n} = ExpensesSlice.actions;\r\n\r\nexport default ExpensesSlice.reducer;\r\n","import React from \"react\";\r\nimport { Grid, Toolbar as MuiToolbar } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport SearchInput from \"../../atoms/SearchInput\";\r\nimport DialogButton from \"../../atoms/DialogButton\";\r\nimport { useStyles } from \"./style\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openAddExpenseModal } from \"../../../slices/ExpensesSlice\";\r\n\r\nconst Toolbar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const openAddExpenseModalHandler = () => {\r\n    dispatch(openAddExpenseModal());\r\n  };\r\n\r\n  return (\r\n    <MuiToolbar className={classes.margin}>\r\n      <Grid container justify=\"space-between\" alignItems=\"center\">\r\n        <SearchInput />\r\n        <DialogButton\r\n          onClick={openAddExpenseModalHandler}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<Add />}\r\n        >\r\n          Add Expense\r\n        </DialogButton>\r\n      </Grid>\r\n    </MuiToolbar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { SingleExpense } from \"../../../interfaces\";\r\n\r\ninterface ActionButtonProps {\r\n  children: React.ReactElement;\r\n  color: \"primary\" | \"secondary\";\r\n  onClick: () => void;\r\n}\r\n\r\nconst ActionButton: React.FC<ActionButtonProps> = ({ children, color, onClick }) => {\r\n  return (\r\n    <IconButton onClick={onClick} size=\"small\" color={color}>\r\n      {children}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","type Order = 'asc' | 'desc';\r\n\r\nconst descendingComparator = <T>(a: T, b: T, orderBy: keyof T) => {\r\nif (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n};\r\n  \r\nexport const getComparator = <Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number => {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n};\r\n  \r\nexport const stableSort = <T>(array: T[], comparator: (a: T, b: T) => number) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table as MuiTable,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  TablePagination,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport { EditOutlined, Delete } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\nimport { SingleExpense, TableHeaderData } from \"../../../interfaces\";\r\nimport Toolbar from \"../../molecules/Toolbar\";\r\nimport ActionButton from \"../../atoms/ActionButton\";\r\nimport { getComparator, stableSort } from \"./helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeExpense, openEditExpenseModal } from \"../../../slices/ExpensesSlice\";\r\n\r\ninterface TableProps {\r\n  bodyData: Array<SingleExpense>;\r\n  headData: Array<TableHeaderData>;\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ bodyData, headData }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleRemoveExpense = (id: number) => {\r\n    dispatch(removeExpense(id));\r\n  };\r\n\r\n  const handleOpenEditExpenseModal = (editedExpense: SingleExpense) => {\r\n    dispatch(openEditExpenseModal(editedExpense));\r\n  }\r\n\r\n  //Pagination variables of state\r\n\r\n  const rowsPerPageOptions = [5, 10, 25];\r\n  const [page, setPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(\r\n    rowsPerPageOptions[page]\r\n  );\r\n\r\n  //Pagination handle functions\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\r\n    newPage: number\r\n  ): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ): void => {\r\n    setRowsPerPage(parseInt(event.target.value));\r\n    setPage(0);\r\n  };\r\n\r\n  //Sorting variables of state\r\n  const [order, setOrder] = useState<\"asc\" | \"desc\">(\"asc\");\r\n  const [orderBy, setOrderBy] = useState<string>(\"\");\r\n\r\n  const handleRequestSort = (property: string) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const sortedAndPagingData = stableSort<any>(\r\n    bodyData,\r\n    getComparator(order, orderBy)\r\n  ).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar />\r\n      <TableContainer>\r\n        <MuiTable className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {headData.map((dataHeadCell) => (\r\n                <TableCell key={dataHeadCell.name}>\r\n                  <TableSortLabel\r\n                    active={orderBy === dataHeadCell.name}\r\n                    direction={orderBy === dataHeadCell.name ? order : \"asc\"}\r\n                    onClick={() => handleRequestSort(dataHeadCell.name)}\r\n                    disabled={!dataHeadCell.sortable}\r\n                  >\r\n                    {dataHeadCell.label}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedAndPagingData.map((costDataRow) => (\r\n              <TableRow key={costDataRow.id}>\r\n                <TableCell>{costDataRow.expense}</TableCell>\r\n                <TableCell>{costDataRow.cost}</TableCell>\r\n                <TableCell>{costDataRow.category}</TableCell>\r\n                <TableCell>{costDataRow.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton onClick={()=>handleOpenEditExpenseModal(costDataRow)} color=\"primary\">\r\n                    <EditOutlined />\r\n                  </ActionButton>\r\n                  <ActionButton onClick={()=>handleRemoveExpense(costDataRow.id)} color=\"secondary\">\r\n                    <Delete />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </MuiTable>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        count={bodyData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  makeStyles,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport DialogButton from \"../../atoms/DialogButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  closeAddExpenseModal,\r\n  closeEditExpenseModal,\r\n  selectIsAddExpenseModalOpen,\r\n  selectIsEditExpenseModalOpen,\r\n  addExpense,\r\n  selectNewOrEditedExpense,\r\n  editExpense,\r\n} from \"../../../slices/ExpensesSlice\";\r\nimport { Formik, Form as FormikForm, Field } from \"formik\";\r\nimport { TextField, Select } from \"formik-material-ui\";\r\nimport { DatePicker } from \"formik-material-ui-pickers\";\r\nimport { ErrorTypes } from \"../../../interfaces\";\r\n\r\ninterface FormProps {\r\n  formType: \"add\" | \"edit\";\r\n}\r\n\r\nconst categories = [\"Electronics\", \"Grocery\", \"Bills\", \"Hobby\", \"Hygiene\"];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"100%\",\r\n      margin: \"16px 0\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Form: React.FC<FormProps> = ({ formType }) => {\r\n  const dispatch = useDispatch();\r\n  const isAddExpenseModalOpen = useSelector(selectIsAddExpenseModalOpen);\r\n  const isEditExpenseModalOpen = useSelector(selectIsEditExpenseModalOpen);\r\n  const newOrEditExpense = useSelector(selectNewOrEditedExpense);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Formik\r\n        initialValues={newOrEditExpense}\r\n        validate={(values) => {\r\n          const errors: ErrorTypes = {};\r\n          if (!values.expense.trim()) {\r\n            errors.expense = \"Expense is required\";\r\n          }\r\n          if (!values.cost) {\r\n            errors.cost = \"Cost is required\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values) => {\r\n          if (isAddExpenseModalOpen) {\r\n            dispatch(addExpense(values));\r\n            dispatch(closeAddExpenseModal());\r\n          } else if (isEditExpenseModalOpen) {\r\n            dispatch(editExpense(values));\r\n            dispatch(closeEditExpenseModal());\r\n          }\r\n        }}\r\n      >\r\n        {({ submitForm, errors, resetForm }) => (\r\n          <FormikForm className={classes.root}>\r\n            <Field\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Expense\"\r\n              name=\"expense\"\r\n              component={TextField}\r\n            />\r\n\r\n            <Field\r\n              variant=\"outlined\"\r\n              label=\"Cost\"\r\n              name=\"cost\"\r\n              type=\"number\"\r\n              fullWidth\r\n              component={TextField}\r\n              InputProps={{ inputProps: { min: 0 } }}\r\n            />\r\n\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel>Category</InputLabel>\r\n              <Field component={Select} label=\"Category\" name=\"category\">\r\n                {categories.map((item) => (\r\n                  <MenuItem key={item} value={item}>\r\n                    {item}\r\n                  </MenuItem>\r\n                ))}\r\n              </Field>\r\n            </FormControl>\r\n\r\n            <Field\r\n              component={DatePicker}\r\n              fullWidth\r\n              inputVariant=\"outlined\"\r\n              format=\"MMM/dd/yyyy\"\r\n              name=\"date\"\r\n              label=\"Date\"\r\n            />\r\n\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              <Grid item xs={5}>\r\n                <DialogButton\r\n                  variant=\"contained\"\r\n                  onClick={resetForm}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  type=\"reset\"\r\n                >\r\n                  Reset\r\n                </DialogButton>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <DialogButton\r\n                  variant=\"contained\"\r\n                  onClick={submitForm}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  type=\"submit\"\r\n                >\r\n                  {formType === \"add\" ? \"Add\" : \"Edit\"}\r\n                </DialogButton>\r\n              </Grid>\r\n            </Grid>\r\n          </FormikForm>\r\n        )}\r\n      </Formik>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog as MuiDialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Form from \"../../organisms/Form\";\r\nimport ActionButton from \"../../atoms/ActionButton\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  closeAddExpenseModal,\r\n  closeEditExpenseModal,\r\n} from \"../../../slices/ExpensesSlice\";\r\n\r\ninterface DialogProps {\r\n  actionType: \"edit\" | \"add\";\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dialogWrapper: {\r\n    padding: theme.spacing(2),\r\n    position: \"absolute\",\r\n    top: theme.spacing(5),\r\n  },\r\n\r\n  dialogTitle: {\r\n    padding: \"0px\",\r\n  },\r\n}));\r\n\r\nconst Dialog: React.FC<DialogProps> = ({ actionType }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    if (actionType === \"add\") {\r\n      dispatch(closeAddExpenseModal());\r\n    } else if (actionType === \"edit\") {\r\n      dispatch(closeEditExpenseModal());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MuiDialog open={true} classes={{ paper: classes.dialogWrapper }}>\r\n      <DialogTitle className={classes.dialogTitle}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography variant=\"h5\" component=\"h2\" style={{ flexGrow: 1 }}>\r\n            {actionType === \"add\" ? \"Add Expense\" : \"Edit Expense\"}\r\n          </Typography>\r\n          <ActionButton onClick={handleClose} color=\"secondary\">\r\n            <Close />\r\n          </ActionButton>\r\n        </div>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Form formType={actionType} />\r\n      </DialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport Table from \"../../organisms/Table\";\r\nimport Dialog from \"../../templates/Dialog\";\r\nimport { exampleHeaderData } from \"../../../exampleData\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectExpenses,\r\n  selectIsEditExpenseModalOpen,\r\n  selectIsAddExpenseModalOpen,\r\n} from \"../../../slices/ExpensesSlice\";\r\n\r\nconst MainPage: React.FC = () => {\r\n  const expenses = useSelector(selectExpenses);\r\n  const isAddExpenseModalOpen = useSelector(selectIsAddExpenseModalOpen);\r\n  const isEditExpenseModalOpen = useSelector(selectIsEditExpenseModalOpen);\r\n\r\n  return (\r\n    <>\r\n      <Table bodyData={expenses} headData={exampleHeaderData} />\r\n      {isAddExpenseModalOpen && <Dialog actionType=\"add\" />}\r\n      {isEditExpenseModalOpen && <Dialog actionType=\"edit\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\nimport MainPage from \"./components/pages/MainPage\";\n\nconst App: React.FC = () => {\n  return <MainPage />;\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        html: {\r\n          boxSizing: \"border-box\",\r\n        },\r\n\r\n        body: {\r\n          margin: \"30px auto\",\r\n          maxWidth: \"1000px\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport ExpensesSlice from \"./slices/ExpensesSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    expenses: ExpensesSlice,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport { theme } from \"./theme/theme\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}