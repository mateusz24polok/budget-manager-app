{"version":3,"sources":["components/organisms/Table/styles.tsx","components/atoms/SearchInput/styles.tsx","components/atoms/SearchInput/index.tsx","components/atoms/AddExpenseButton/index.tsx","components/molecules/Toolbar/style.tsx","components/molecules/Toolbar/index.tsx","components/atoms/ActionButton/index.tsx","components/organisms/Table/helpers.ts","components/organisms/Table/index.tsx","exampleData.tsx","components/pages/MainPage/index.tsx","App.tsx","theme/theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","table","border","marginTop","spacing","fontWeight","color","palette","primary","main","backgroundColor","light","cursor","fontSize","newButton","textTransform","newInput","width","padding","margin","SearchInput","value","onChange","classes","TextField","className","variant","label","InputProps","startAdornment","InputAdornment","position","Search","AddExpenseButton","Button","startIcon","Add","Toolbar","Grid","container","justify","alignItems","ActionButton","children","IconButton","size","descendingComparator","a","b","orderBy","Table","bodyData","headData","rowsPerPageOptions","useState","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","setOrderBy","sortedAndPagingData","array","comparator","stabilizedThis","map","el","index","sort","stableSort","getComparator","slice","Paper","TableContainer","TableHead","TableRow","dataHeadCell","TableCell","TableSortLabel","active","name","direction","onClick","property","disabled","sortable","TableBody","costDataRow","expense","cost","category","date","toLocaleDateString","EditOutlined","Delete","id","TablePagination","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","exampleData","Date","exampleHeaderData","MainPage","App","createMuiTheme","overrides","MuiCssBaseline","html","boxSizing","body","maxWidth","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.9a404f6e.chunk.js","sourcesContent":["import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  table: {\r\n    border: \"2px solig green\",\r\n    marginTop: theme.spacing(3),\r\n    \"& thead th\": {\r\n      fontWeight: \"600\",\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#fffbf2\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n\r\n  \"@media (max-width: 960px)\": {\r\n    table: {\r\n      \"& thead th\": {\r\n        fontSize: \"10px\",\r\n      },\r\n      \"& tbody td\": {\r\n        fontSize: \"10px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  newButton: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n\r\n  newInput: {\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface SearchInputProps {\r\n  value?: string;\r\n  onChange?: () => void;\r\n}\r\n\r\nconst SearchInput: React.FC<SearchInputProps> = ({ value, onChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      className={classes.margin}\r\n      value={value}\r\n      onChange={onChange}\r\n      variant=\"outlined\"\r\n      label=\"Find your expense\"\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <Search />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nconst AddExpenseButton = () => {\r\n  return (\r\n    <Button startIcon={<Add />} color=\"primary\" variant=\"contained\">\r\n      Add Item\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddExpenseButton;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Grid, Toolbar as MuiToolbar } from \"@material-ui/core\";\r\nimport SearchInput from \"../../atoms/SearchInput\";\r\nimport AddExpenseButton from \"../../atoms/AddExpenseButton\";\r\nimport { useStyles } from \"./style\";\r\n\r\nconst Toolbar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiToolbar className={classes.margin}>\r\n      <Grid container justify=\"space-between\" alignItems=\"center\">\r\n        <SearchInput />\r\n        <AddExpenseButton />\r\n      </Grid>\r\n    </MuiToolbar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\ninterface ActionButtonProps {\r\n  children: React.ReactElement;\r\n  color: \"primary\" | \"secondary\";\r\n}\r\n\r\nconst ActionButton: React.FC<ActionButtonProps> = ({ children, color }) => {\r\n  return (\r\n    <IconButton size=\"small\" color={color}>\r\n      {children}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","type Order = 'asc' | 'desc';\r\n\r\nconst descendingComparator = <T>(a: T, b: T, orderBy: keyof T) => {\r\nif (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n};\r\n  \r\nexport function getComparator<Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n  ): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\nexport const stableSort = <T>(array: T[], comparator: (a: T, b: T) => number) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table as MuiTable,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  TablePagination,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport { EditOutlined, Delete } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\nimport { SingleExpense, TableHeaderData } from \"../../../interfaces\";\r\nimport Toolbar from \"../../molecules/Toolbar\";\r\nimport ActionButton from \"../../atoms/ActionButton\";\r\nimport { getComparator, stableSort } from \"./helpers\";\r\n\r\ninterface TableProps {\r\n  bodyData: Array<SingleExpense>;\r\n  headData: Array<TableHeaderData>;\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ bodyData, headData }) => {\r\n  const classes = useStyles();\r\n\r\n  //Pagination variables of state\r\n\r\n  const rowsPerPageOptions = [5, 10, 25];\r\n  const [page, setPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(\r\n    rowsPerPageOptions[page]\r\n  );\r\n\r\n  //Pagination handle functions\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\r\n    newPage: number\r\n  ): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ): void => {\r\n    setRowsPerPage(parseInt(event.target.value));\r\n    setPage(0);\r\n  };\r\n\r\n  //Sorting variables of state\r\n  const [order, setOrder] = useState<\"asc\" | \"desc\">(\"asc\");\r\n  const [orderBy, setOrderBy] = useState<string>(\"\");\r\n\r\n  const handleRequestSort = (property: string) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const sortedAndPagingData = stableSort<any>(\r\n    bodyData,\r\n    getComparator(order, orderBy)\r\n  ).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar />\r\n      <TableContainer>\r\n        <MuiTable className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {headData.map((dataHeadCell) => (\r\n                <TableCell key={dataHeadCell.name}>\r\n                  <TableSortLabel\r\n                    active={orderBy === dataHeadCell.name}\r\n                    direction={orderBy === dataHeadCell.name ? order : \"asc\"}\r\n                    onClick={() => handleRequestSort(dataHeadCell.name)}\r\n                    disabled={!dataHeadCell.sortable}\r\n                  >\r\n                    {dataHeadCell.label}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedAndPagingData.map((costDataRow) => (\r\n              <TableRow key={costDataRow.id}>\r\n                <TableCell>{costDataRow.expense}</TableCell>\r\n                <TableCell>{costDataRow.cost}</TableCell>\r\n                <TableCell>{costDataRow.category}</TableCell>\r\n                <TableCell>{costDataRow.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>\r\n                  <ActionButton color=\"primary\">\r\n                    <EditOutlined />\r\n                  </ActionButton>\r\n                  <ActionButton color=\"secondary\">\r\n                    <Delete />\r\n                  </ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </MuiTable>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        count={bodyData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { SingleExpense, TableHeaderData } from \"./interfaces\";\r\n\r\nexport const exampleData: Array<SingleExpense> = [\r\n  {\r\n    id: 0,\r\n    expense: \"New TV\",\r\n    cost: 2000,\r\n    category: \"Electronics\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    expense: \"Fruits and Vegetable\",\r\n    cost: 10,\r\n    category: \"Grocery\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    expense: \"Electicity\",\r\n    cost: 250,\r\n    category: \"Bills\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    expense: \"Vinyls\",\r\n    cost: 300,\r\n    category: \"Hobby\",\r\n    date: new Date(),\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    expense: \"Shampoo\",\r\n    cost: 20,\r\n    category: \"Hygiene\",\r\n    date: new Date(),\r\n  },\r\n];\r\n\r\nexport const exampleHeaderData: Array<TableHeaderData> = [\r\n  {\r\n    name: \"expense\",\r\n    label: \"Expense\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"cost\",\r\n    label: \"Cost $\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"category\",\r\n    label: \"Category\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"date\",\r\n    label: \"Date\",\r\n    sortable: true,\r\n  },\r\n\r\n  {\r\n    name: \"actions\",\r\n    label: \"Edit / Remove\",\r\n    sortable: false,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Table from \"../../organisms/Table\";\r\nimport { exampleData, exampleHeaderData } from \"../../../exampleData\";\r\n\r\nconst MainPage: React.FC = () => <Table bodyData={exampleData} headData={exampleHeaderData} />;\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\nimport MainPage from \"./components/pages/MainPage\";\n\nconst App: React.FC = () => {\n  return <MainPage />;\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        html: {\r\n          boxSizing: \"border-box\",\r\n        },\r\n\r\n        body: {\r\n          margin: \"30px auto\",\r\n          maxWidth: \"1000px\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { theme } from \"./theme/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}